name: CI

permissions:
  checks: write

on:
  push: {}
  pull_request: {}

jobs:
  build:
    name: Install, build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Run tests (with coverage + Jest JUnit + JSON results)
        # produce coverage/, test-results/jest-junit.xml and test-results/jest-results.json for uploads
        run: |
          mkdir -p test-results
          npm test -- --coverage --runInBand --json --outputFile=test-results/jest-results.json \
            --reporters=default --reporters=jest-junit

      - name: Summarize coverage in job summary
        if: always()
        run: |
          node <<'EOF'
          const fs = require('fs');
          const p = 'coverage/coverage-summary.json';
          const out = process.env.GITHUB_STEP_SUMMARY;
          if (!out) { console.log('GITHUB_STEP_SUMMARY not set; skipping summary'); process.exit(0); }
          if (fs.existsSync(p)) {
            const d = JSON.parse(fs.readFileSync(p));
            let summary = '| Metric | % |\n|---|---|\n';
            for (const k in d.total) {
              summary += `| ${k} | ${d.total[k].pct}% |\n`;
            }
            fs.appendFileSync(out, summary);
          }
          EOF
      - name: Publish JUnit test report to GitHub Checks
        uses: dorny/test-reporter@v2
        with:
          name: Jest
          path: test-results/jest-junit.xml
          reporter: jest-junit
